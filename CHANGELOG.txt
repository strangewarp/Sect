
1.2

-- TODO: Add cross-platform native MIDI I/O.
-- TODO: Add a "custom MIDI command" entry box, for non-note commands of arbitrary value and length (e.g. SYSEX), and change Cmd Mode to compensate for them.

1.1.1

-- TODO: Extend sparse-table data-structures to individual ticks within the sequence; keep track of a sequence's total ticks with a "total" var instead.
-- TODO: Remove unnecessary 'undo' vars from function-calls and undo-funcs.

1.1

-- TODO: Add a "CMD mode", where a sequence's non-NOTE commands are held and modified.
---- Added Cmd Mode versions of deleteTickNotes and deleteBeatNotes.
---- sub-task: In Cmd Mode, render item-text after/above cmd-rectangles.
---- sub-task: Show the active sequence's Cmd Mode commands as Shadow Mode notes, with unique coloration, when Cmd Mode isn't active.
---- sub-task: Check whether saveFile and loadFile are truly compatible with non-NOTE commands.
---- sub-task: Change how Shadow Mode is applied to a seq's NOTE cmds while Cmd Mode is active.

-- TODO: Simplify the selection data-structures to only use data.seldat.
---- sub-task: Similarly simplify the data.copydat structures, to hold concretely indexed chan-notes with relative tick-indexing, signified by the offset-value in data.copyoffset.
-- sub-task: Rewrite every function that used "data.selindex"

-- TODO: Change seq data structures

-- TODO: Convert all data.seq manipulations to use buildTable/buildTable/getContents/dismantleTable/dismantleIndex, rather than touching the tables directly

-- REMINDER: Data structures:
---- data.seq[a].tick[b].note[c][d] = a single unique note (c=chan, d=pitch)
---- data.seq[a].tick[b].cmd[c] = {... that channel's non-note cmds}

-- REMINDER: Selection data structures:
---- data.seloffset = distance that seldat tick 1 is offset from tick-pointer
---- data.seldat[tick][chan][pitch] = a single unique note

-- REMINDER: Use SPARSE TABLES: a channel table should only exist if that channel is populated by something

-- TODO: Add "Stretch" and "Squash" commands, which multiply or divide both the duration and the starting tick of every selected note, based on spacing value, and rounded to the nearest tick-value.
---- sub-task: construct undo-table at end of function
---- sub-task: add these func-names to data.undocmds

-- TODO: Add a simple metronome in Play Mode, and a flag-command to toggle its activity.
---- sub-task: Make metronome toggleable to any number lower than TPQ*4.
---- sub-task: On TPQ-change, reset metro value to TPQ value.

-- TODO: Add user-toggleable "Play-Quantize" flag, which will make incoming notes and cmds in Play Mode (from both keyboard-piano and MIDI IN) stick to the nearest metro-tick.

-- TODO: Test all commands thoroughly again, to check for bugs caused by refactoring

-- TODO: Fix deletion of dummy-file used to test user-directory's validity

-- TODO: comment out console again
-- TODO: remove "debugging" messages
-- TODO: change data.version back to "1.1"

-- Added full MIDI-IN, for composition via external MIDI devices. Due to how Spacing and Play Mode interact with note-entry, there doesn't need to be any explicit tabbing between input-types.
-- Created a two-way MIDI-over-UDP communications system, designed to send MIDI between Sect and user devices, via SectMidiClient.
-- Added "Quantize" command, which snaps all selected notes in the active sequence to ticks that are multiples of data.spacing.
-- Added "Select Chan" command, a version of Select-All that only applies to notes in the active seq's active channel.
-- Bounded Generator Mode wheel-size to 7 (used to be 8), to make active data tables more sane.
-- Changed Play Mode behavior, to repeat the contents of smaller sequences across larger sequences.
-- Removed moveNotes, and rewrote modNotes to make more sense.
-- Fixed an old function-call inside of removeTicks that was likely causing buggy behavior in certain situations.
-- Fixed a potentially fatal bug in the interaction of deleteBeatNotes and getNotes.
-- normalizePointers will now halt Play Mode if all sequences are deleted.
-- Added a "funcgate" mechanism to executeFunction, so that undo commands stay functional during the proper times, due to changes incurred by its command-blocking mechanism.
-- Modified executeFunction to start blocking commands that try to access or modify the data.seq table, whenever data.active is false. Also removed more primitive versions of this functionality from some commands.
-- Changed all data-structures and data-handling involved with mode-based interpretation of key-commands.
-- Added a visual confirmation on file-save.
-- Removed old OSC and Extrovert-API code, which was clunky and extraneous.
-- Started rendering a shadow under every note's channel-number.
-- Started clipping the left edges of beat-triangles properly, now that Cmd Mode's GUI visually requires it.
-- Compensated for a stray vertical grey line off the bottom edge of the piano-roll that would disappear in Cmd Mode.
-- Fixed the piano-roll's connection to the Reticule's user-defined Y-anchor position.
-- Started accepting repeated commands from held-down keys.
-- Now allow multiple computer-keyboard keys to be pressed simultaneously, so that example-chords can be sent across UDP to external MIDI devices.
-- Started removing all active keystrokes on focus-change.
-- Changed all note-deletion commands to only act upon notes of the currently active channel.
-- Changed some note-functions so they won't overwrite notes that sit on different channels within the same sequence, when they share pitch values.
-- Changed shiftInternalValue so that values multiplied by numbers less than 1 will be floored, rather than rounded. This will allow for easier reduction of Spacing to 0.
-- Changed the rendering properties of the notes within a sequence's non-active channels, both in their default state and while selected.
-- Started locally keeping track of userprefs' version number, and added a mechanism to update old userprefs versions.
-- The dummy-file used to test the save-directory's validity will now be deleted.

1.0.3
-- Fixed savefile corruption that would be caused by switchSequences under certain circumstances.
-- Added pasteRepeating, a repeating-paste command.

1.0.2
-- Cursor will now move to the sequence's first note after loadFile.
-- Put a roundNum onto post-loadFile BPM values.

1.0.1
-- Changed cursor images from GIF to PNG.
-- Added a canary mechanism to reject false savepaths.

1.0
-- Initial release.
